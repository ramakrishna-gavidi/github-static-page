name: $(Date:yyyy).$(Date:MM).$(Date:dd).$(Rev:r)

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

steps:
- checkout: self
  clean: false
  fetchDepth: 1
  lfs: true

# Display agent system info
- script: |
    node --version
    yarn --version
    free -h
    df -h
    ls -la
  displayName: 'Pre-Build System Info'

# Cache Yarn Download Cache
- task: Cache@2
  inputs:
    key: 'yarn-cache | "$(Agent.OS)" | yarn.lock'
    restoreKeys: |
      yarn-cache | "$(Agent.OS)"
    path: $(Pipeline.Workspace)/.cache/yarn
  displayName: 'Cache Yarn Download Cache'

# Cache node_modules
- task: Cache@2
  inputs:
    key: 'node_modules | "$(Agent.OS)" | yarn.lock'
    restoreKeys: |
      node_modules | "$(Agent.OS)"
    path: $(System.DefaultWorkingDirectory)/node_modules
  displayName: 'Cache node_modules'

# Install Dependencies
- script: |
    mkdir -p $(Pipeline.Workspace)/.cache/yarn
    mkdir -p $(System.DefaultWorkingDirectory)/node_modules
    yarn config set cacheFolder $(Pipeline.Workspace)/.cache/yarn
    yarn config set enableTelemetry false  # Optional: Disable telemetry
    yarn install --prefer-offline --no-progress --no-audit
  displayName: 'Install dependencies'

# Build
- script: |
    NODE_OPTIONS="--max_old_space_size=8192" \
    GENERATE_SOURCEMAP=false \
    yarn build --verbose
  displayName: 'Build App'

# Publish build artifact
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: build
